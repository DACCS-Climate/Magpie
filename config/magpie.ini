###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[composite:main]
use = egg:Paste#urlmap
/ = magpie_app
#/api = api_app
#/magpie/api = api_app

[app:magpie_app]
use = egg:magpie
filter-with = urlprefix

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_beaker
    pyramid_tm
    ziggurat_foundations.ext.pyramid.sign_in
    ziggurat_foundations.ext.pyramid.get_user

## magpie
# see all options in 'https://pavics-magpie.readthedocs.io/en/latest/configuration.html'
magpie.port = 2001
magpie.url = http://localhost:2001

# magpie.config_path =

# --- cookie definition --- (defaults below if omitted)
# refer to 'https://pavics-magpie.readthedocs.io/en/latest/configuration.html#security-settings'
# WARNING:
#   Secret should be the same in Twitcher INI
#   Otherwise, they cannot resolve same user references
magpie.secret =
# magpie.cookie_name = auth_tkt
# magpie.cookie_expire =    # value in seconds, never expire by default

# --- temporary token definition --- (defaults below if omitted)
magpie.token_expire = 86400

# --- phoenix ---
magpie.push_phoenix = true

# --- caching settings ---
# refer to 'https://pavics-magpie.readthedocs.io/en/latest/performance.html'
# WARNING:
#   Caching settings should also be defined in Twitcher INI as it is its application that will
#   receive most requests and actually ask Magpie to resolve ACL/Services for it to allow/deny access
cache.regions = acl, service
cache.type = memory
# controls cache of user effective permission resolution by Access Control Lists
cache.acl.enabled = false
# cache.acl.expire = 30
# controls cache of service retrieval operations
cache.service.enable = false
# cache.service.expire = 10

# ziggurat
ziggurat_foundations.model_locations.User = magpie.models:User
ziggurat_foundations.sign_in.username_key = user_name
ziggurat_foundations.sign_in.password_key = password
ziggurat_foundations.sign_in.came_from_key = came_from
ziggurat_foundations.sign_in.sign_in_pattern = /signin_internal
ziggurat_foundations.sign_in.sign_out_pattern = /signout
ziggurat_foundations.session_provider_callable = magpie.models:get_session_callable

[app:api_app]
use = egg:Paste#static
document_root = %(here)s/ui/swagger

[filter:urlprefix]
use = egg:PasteDeploy#prefix
# prefix must be adjusted according to 'MAGPIE_URL' / 'magpie.url'
prefix = /magpie

###
# wsgi server configuration
###

[server:main]
use = egg:gunicorn#main
host = localhost
port = 2001
timeout = 10
workers = 3
threads = 4

# used by magpie/alembic for database migration
# %(here)s corresponds to this directory
[alembic]
script_location = %(here)s/../magpie/alembic
#sqlalchemy.url = postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
file_template = %%(year)d-%%(month).2d-%%(day).2d_%%(rev)s_%%(slug)s

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, magpie, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
formatter = generic

[logger_magpie]
level = INFO
handlers =
qualname = magpie
formatter = generic

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
formatter = generic

[logger_alembic]
level = INFO
handlers =
qualname = alembic
formatter = generic

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = [%(asctime)s] %(levelname)-10.10s [%(threadName)s][%(name)s] %(message)s
