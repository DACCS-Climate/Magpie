# Creates Magpie services/resource permissions with specified configuration values on application startup.
#
#   This configuration is parsed after 'providers.cfg' (if found) to allow referencing existing service definitions.
#
#   - Default location is 'magpie/config/permissions.cfg'.
#   - Directory location can be overridden with 'MAGPIE_CONFIG_DIR' (using filename 'permissions.cfg')
#     or can be explicitly overridden with 'MAGPIE_PERMISSIONS_CONFIG_PATH' pointing to a valid file.
#   - If 'MAGPIE_PERMISSIONS_CONFIG_PATH' points to an existing directory, the application will attempt
#     to process all '.cfg' files found under it one-by-one as separate 'permissions' configurations.
#
# Parameters:
#   service:              service name to receive the permission (directly on it if no 'resource' mentioned, must exist)
#   resource (optional):  tree path of the service's resource (ex: /res1/sub-res2/sub-sub-res3)
#   user and/or group:    user/group for which to apply the permission (create if missing, see below)
#   permission:           name of the permission to be applied (see 'magpie/permissions.py' for supported values)
#   action:               one of [create, remove] (default: create)
#
# Default behaviour:
#   - create missing resources if supported by the service (and tree automatically resolvable), then apply permissions.
#   - create missing user/group if required (default user created: (group: anonymous, password: 12345).
#   - applicable service, user or group is missing, corresponding permissions are ignored and not updated.
#   - unknown actions are ignored and corresponding permission are not updated, unspecified action resolves to 'create'.
#   - already satisfied permission configurations are left as is
#     (ie: existing permission to create or non-existing permission to remove are passed)
#
permissions:
  - service: api
    resource: /api
    permission: read
    user: anonymous
    action: create
  - service: flyingpigeon
    permission: getcapabilities
    group: administrators
